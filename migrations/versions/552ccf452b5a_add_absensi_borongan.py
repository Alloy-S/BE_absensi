"""add absensi borongan

Revision ID: 552ccf452b5a
Revises: 969b35c2f1f4
Create Date: 2025-06-15 20:19:52.153641

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '552ccf452b5a'
down_revision = '969b35c2f1f4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('absensi_borongan',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('total', sa.Numeric(precision=9, scale=2), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('harga_harian_borongan',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nama', sa.String(length=100), nullable=False),
    sa.Column('harga_normal', sa.Numeric(precision=9, scale=2), nullable=False),
    sa.Column('harga_lembur', sa.Numeric(precision=9, scale=2), nullable=False),
    sa.Column('jam_start_normal', sa.Time(), nullable=False),
    sa.Column('jam_end_normal', sa.Time(), nullable=False),
    sa.Column('toleransi_waktu', sa.SmallInteger(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('approval_absensi_borongan',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('approval_user_id', sa.UUID(), nullable=False),
    sa.Column('absensi_borongan_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['absensi_borongan_id'], ['absensi_borongan.id'], ),
    sa.ForeignKeyConstraint(['approval_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('detail_absensi_borongan',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ton_normal', sa.Numeric(precision=9, scale=2), nullable=False),
    sa.Column('ton_lembur', sa.Numeric(precision=9, scale=2), nullable=False),
    sa.Column('tipe', sa.String(length=20), nullable=False),
    sa.Column('total', sa.Numeric(precision=9, scale=2), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('absensi_borongan_id', sa.UUID(), nullable=False),
    sa.Column('harga_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['absensi_borongan_id'], ['absensi_borongan.id'], ),
    sa.ForeignKeyConstraint(['harga_id'], ['harga_harian_borongan.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    with op.batch_alter_table('approval_reimburse', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_date', sa.DateTime(), nullable=False))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=30),
               existing_nullable=False)
        batch_op.drop_column('date')

    with op.batch_alter_table('jatah_kuota_cuti', schema=None) as batch_op:
        batch_op.add_column(sa.Column('year', sa.SmallInteger(), nullable=False))
        batch_op.add_column(sa.Column('kuota', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('izin_digunakan', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.UUID(), nullable=False))
        batch_op.add_column(sa.Column('jenis_izin_id', sa.UUID(), nullable=False))
        batch_op.drop_constraint(batch_op.f('jatah_kuota_cuti_key_key'), type_='unique')
        batch_op.drop_constraint(batch_op.f('jatah_kuota_cuti_kuota_cuti_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('jatah_kuota_cuti_data_karyawan_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'jenis_izin', ['jenis_izin_id'], ['id'])
        batch_op.drop_column('key')
        batch_op.drop_column('data_karyawan_id')
        batch_op.drop_column('value')
        batch_op.drop_column('kuota_cuti_id')

    op.drop_table('kuota_cuti')

    with op.batch_alter_table('jenis_izin', schema=None) as batch_op:
        batch_op.add_column(sa.Column('default_kuota', sa.Integer(), nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('jenis_izin', schema=None) as batch_op:
        batch_op.drop_column('default_kuota')

    with op.batch_alter_table('jatah_kuota_cuti', schema=None) as batch_op:
        batch_op.add_column(sa.Column('kuota_cuti_id', sa.UUID(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('value', sa.VARCHAR(length=256), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('data_karyawan_id', sa.UUID(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('key', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('jatah_kuota_cuti_data_karyawan_id_fkey'), 'data_karyawan', ['data_karyawan_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('jatah_kuota_cuti_kuota_cuti_id_fkey'), 'kuota_cuti', ['kuota_cuti_id'], ['id'])
        batch_op.create_unique_constraint(batch_op.f('jatah_kuota_cuti_key_key'), ['key'], postgresql_nulls_not_distinct=False)
        batch_op.drop_column('jenis_izin_id')
        batch_op.drop_column('user_id')
        batch_op.drop_column('izin_digunakan')
        batch_op.drop_column('kuota')
        batch_op.drop_column('year')

    with op.batch_alter_table('approval_reimburse', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.alter_column('status',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.drop_column('created_date')

    op.create_table('kuota_cuti',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('key', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('kuota_cuti_pkey')),
    sa.UniqueConstraint('key', name=op.f('kuota_cuti_key_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('detail_absensi_borongan')
    op.drop_table('approval_absensi_borongan')
    op.drop_table('harga_harian_borongan')
    op.drop_table('absensi_borongan')
    # ### end Alembic commands ###
